package io.kafkaobs.substrates;

import io.kafkaobs.substrates.circuit.Circuit;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;

import static org.assertj.core.api.Assertions.assertThat;

/**
 * Integration test for CortexRuntime Spring Boot context.
 *
 * <p>Verifies that the application context loads successfully and circuits
 * are initialized via @PostConstruct lifecycle hook.
 */
@SpringBootTest
class CortexRuntimeIntegrationTest {

    @Autowired
    private CortexRuntime cortex;

    @Test
    void shouldStartSpringBootContext() {
        // Then - Context loaded successfully
        assertThat(cortex).isNotNull();
    }

    @Test
    void shouldInitializeCircuitsOnStartup() {
        // Then - Circuits initialized via @PostConstruct
        assertThat(cortex.getCircuits())
            .hasSize(3)
            .extracting(Circuit::getName)
            .containsExactly("kafka.broker.health", "kafka.cluster.coordination", "kafka.situations");
    }
}
